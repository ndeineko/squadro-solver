name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: cargo clippy --all-targets -- --deny warnings

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: cargo build --release --verbose

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ubuntu-i686
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - name: ubuntu-amd64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
          - name: windows-amd64
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            os: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
    steps:
    - uses: actions/checkout@v4
    - run: rustup target add ${{ matrix.target }}
    - run: sudo apt update -y && sudo apt install gcc-multilib -y
      if: startsWith(matrix.os, 'ubuntu')
    - run: cargo test --verbose --target ${{ matrix.target }}
